Your fruit stand company has some software that calculates and serves a list of products and their prices, taking into account items that are on sale and how the sales affect the total price. This software consists of three components: a base-price component which serves the base prices of fruits sold by the fruit stand, a sales component which provides a list of items that are on sale and how much each item is discounted, and a total-price component which communicates with the other two and calculates the final price for each item.

These components have been running on a single Docker host, but as your business is expanding, it is time to upgrade to a swarm cluster for greater flexibility. Run these three application components as services in your swarm cluster, and provide them with a custom overlay network to facilitate isolated communication between them.

Configure these application components on the Swarm cluster so that the following specifications are met:

1. Create an overlay network called prices-overlay-net.
2. Create a service called base-price with 3 replicas using the linuxacademycontent/prices-base-price:1 image. Configure the service to use the prices-overlay-net network.
3. Create a service called sales with 3 replicas using the linuxacademycontent/prices-sales:1 image. Configure the service to use the prices-overlay-net network.
4. Create a service called total-price with 2 replicas using the linuxacademycontent/prices-total-price:1 image. Configure the service to use the prices-overlay-net network. Expose this service's port 80 on port 8080.

If everything is set up correctly, you should be able to access the total prices list with:
prices-total-price


Good luck!

=============================================================================================================================================================
#Create swarm cluster 

	$ docker swarm init --advertise-addr 172.17.0.98

 	$ docker swarm join --token SWMTKN-1-5lyza3iodu3wuc704myt08v9pktxg68s4td743mme0kxvx3rdz-87il11w28g0j1qr4zx05giha9 172.17.0.98:2377


1. Create an overlay network called prices-overlay-net.

$ docker network create -d overlay prices-overlay-net
#output - jyxj56ov4e7pery2yrmfuo80c


2. Create a service called base-price with 3 replicas using the linuxacademycontent/prices-base-price:1 image. Configure the service to use the prices-overlay-net network.
	$ docker service create --name base-price --publish target=80,published=81 --replicas=3 --network prices-overlay-net linuxacademycontent/prices-base-price:1


3. Create a service called sales with 3 replicas using the linuxacademycontent/prices-sales:1 image. Configure the service to use the prices-overlay-net network.
	$docker service create --name sales --publish target=80,published=83 --replicas=3 --network prices-overlay-net linuxacademycontent/prices-sales:1


4. Create a service called total-price with 2 replicas using the linuxacademycontent/prices-total-price:1 image. Configure the service to use the prices-overlay-net network. Expose this service's port 80 on port 8080.
 	$ docker service create --name total-price --publish target=8080,published=80 --replicas=2 --network prices-overlay-net linuxacademycontent/prices-total-price:1

#verify result at :
$ curl http://172.17.0.98