Your supermarket company is working on expanding their Docker infrastructure. They have an existing service that provides a list of fruit sold in their stores. After measuring the amount of load on this service, they have asked you to scale this service up to a higher number of replicas.

In addition, there is a new service that provides a list of vegetables. This new service needs to be created in the cluster. Set up the swarm cluster to complete the lab, ensure that the swarm meets the following specifications:

1. Scale the service called products-fruit to 5 replicas.
# create a service so that it becomes easy to kep replicas which means high acvaialability in case any container service goes down
docker service scale products-fruit=5
or
docker service create --name products-fruit -p 8080:80 linuxacademycontent/fruit-service


2. Create a new service called products-vegetables running the linuxacademycontent/vegetable-service:1.0.0 image.
# crete a service of vegetable-service image where container runs on 8081
docker service create --name products-vegetables -p 8081:80 linuxacademycontent/vegetable-service:1.0.0 

3. Publish products-vegetables on port 8081. The application listens on port 80.
#transfers data to & from network service using protoco; like https ,http etc
#should display all vegetable list on cli 
curl http://172.17.0.32:8081

4. Run products-vegetables with 3 replicas.
# let service have 3 replicas of vegetables on any node 
docker service update --replicas 3 products-vegetables


You can test the products-fruit service from any swarm node (including the manager) with curl localhost:8080.
#displays all fruits
curl http://172.17.0.32:8080

Once products-vegetables is running, you should be able to test it from any swarm node (including the manager) with curl localhost:8081.
#displays all vegetables
curl http://172.17.0.32:8081
--->>>verified
Good luck!!